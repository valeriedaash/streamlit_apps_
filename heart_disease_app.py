import streamlit as st
import pandas as pd
import joblib  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞–π–ø–ª–∞–π–Ω–æ–≤/–º–æ–¥–µ–ª–µ–π
import sklearn
import catboost
sklearn.set_config(transform_output="pandas")

# –ü–æ–¥–≥—Ä—É–∂–∞–µ–º —Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—é –º–æ–¥–µ–ª—å
ml_pipeline_VC = joblib.load("ml_pipeline.pkl")


st.write(
    """
# –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –æ—Ü–µ–Ω–∏–≤–∞—é—â–µ–µ —Ä–∏—Å–∫ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è —Å–µ—Ä–¥—Ü–∞.

–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.
"""
)

# –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é –≤–∏–¥–∂–µ—Ç–æ–≤ Streamlit
age = st.number_input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç", min_value=0, max_value=120, value=30)
gender = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª (M - male, F - female)", ("M", "F"))
chest_pain_type = st.selectbox(
    "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –±–æ–ª–∏ –≤ –≥—Ä—É–¥–∏ (TA: Typical Angina, ATA: Atypical Angina, NAP: Non-Anginal Pain, ASY: Asymptomatic)",
    ("ATA", "TA", "NAP", "ASY"),
)
resting_bp = st.number_input(
    "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∞—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –≤ –ø–æ–∫–æ–µ mm Hg",
    min_value=0,
    max_value=300,
    value=120,
)
cholesterol = st.number_input(
    "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —É—Ä–æ–≤–µ–Ω—å —Ö–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω–∞ mm/dl", min_value=0, max_value=1000, value=200
)
fasting_bs = st.number_input(
    "–£—Ä–æ–≤–µ–Ω—å —Å–∞—Ö–∞—Ä–∞ –≤ –∫—Ä–æ–≤–∏ –Ω–∞—Ç–æ—â–∞–∫ (1: if FastingBS > 120 mg/dl, 0: otherwise)",
    min_value=0,
    max_value=1,
    value=0,
)
resting_ecg = st.selectbox(
    "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≠–ö–ì –≤ –ø–æ–∫–æ–µ (Normal, ST, LVH)", ("Normal", "ST", "LVH")
)
max_hr = st.number_input(
    "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—É–ª—å—Å (Numeric value between 60 and 202)",
    min_value=60,
    max_value=202,
    value=120,
)
exercise_angina = st.selectbox(
    "–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å—Ç–µ–Ω–æ–∫–∞—Ä–¥–∏—è –ø—Ä–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ? (Y: Yes, N: No)", ("N", "Y")
)
oldpeak = st.number_input(
    "–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–µ–ø—Ä–µ—Å—Å–∏–∏ ST-—Å–µ–≥–º–µ–Ω—Ç–∞ (Numeric value measured in depression)",
    min_value=-5.0,
    max_value=10.0,
    step=0.1,
    value=0.0,
)
st_slope = st.selectbox(
    "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∫–ª–æ–Ω ST-—Å–µ–≥–º–µ–Ω—Ç–∞ (Up: upsloping, Flat: flat, Down: downsloping)",
    ("Up", "Down", "Flat"),
)

# –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Å–ø–∏—Å–æ–∫
input_data = [
    age,
    gender,
    chest_pain_type,
    resting_bp,
    cholesterol,
    fasting_bs,
    resting_ecg,
    max_hr,
    exercise_angina,
    oldpeak,
    st_slope,
]

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –≤ —Å–ø–∏—Å–æ–∫
if st.button("–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–ª–∏—á–∏–µ –±–æ–ª–µ–∑–Ω–∏ —Å–µ—Ä–¥—Ü–∞"):    
    # Age	Sex	ChestPainType	RestingBP	Cholesterol	FastingBS	RestingECG	MaxHR	ExerciseAngina	Oldpeak	ST_Slope
    data = [input_data]
    columns = [
        "Age",
        "Sex",
        "ChestPainType",
        "RestingBP",
        "Cholesterol",
        "FastingBS",
        "RestingECG",
        "MaxHR",
        "ExerciseAngina",
        "Oldpeak",
        "ST_Slope",
    ]
    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º
    input_df = pd.DataFrame(data, columns=columns)

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É—Å–ª–æ–≤–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –º–æ–¥–µ–ª–∏
    if ml_pipeline_VC.predict(input_df) == 0:
        st.write(
            '<span style="font-size:24px; color:green; font-weight:bold;">–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–µ—Ä–æ—è—Ç–Ω–µ–π –≤—Å–µ–≥–æ —É –≤–∞—Å –Ω–µ—Ç –±–æ–ª–µ–∑–Ω–∏ —Å–µ—Ä–¥—Ü–∞! ü•≥</span>',
            unsafe_allow_html=True,
        )
    else:
        st.write(
            '<span style="font-size:24px; color:red; font-weight:bold;">–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —É –≤–∞—Å –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–¥—Ü–µ–º. üò¨ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É! ü§í</span>',
            unsafe_allow_html=True,
        )